<%- include('./includes/dash.ejs') %>
<link rel="stylesheet" href="/assets/css/gamesettings.css">
<link rel="stylesheet" href="/assets/css/cbuilder.css">
<link rel="stylesheet" href="/assets/css/modal.css">
<section class="home">
    <div class="text">Game Builder</div>
    <div class="dash_container">
        <div id="loadModal" class="modal">
            <div class="modal-content">
                <p style="margin-bottom: 20px;">Select a game to load..</p>
                <select id="gameselect" class="box">
                    <option value="none" selected disabled hidden>none</option>
                    <% Games.forEach(function(data) {%>
                        <option value="<%- data['name'] %>"><%- data['name'] %></option>
                    <%})%>
                </select>
                <button class="modal-btn" onclick="loadGame2()">Load Game</button>
            </div>
        </div>
        <form action="/api/creategame" method="POST" id="gameform">
        <div class="interactionCard">
            <div class="interactionCardTitle"> Name </div>
            <div class="interactionCardContent">
                <input type="text" class="box" id="name" placeholder="Name" name="gamename" autocomplete="off">
                <div style="margin-top: 3%;">
                    Enter a name for your game. You can find this game later in your groups settings!
                </div>
            </div>
        </div>
        <div class="interactionCard">
            <div class="interactionCardTitle"> Lives </div>
            <div class="interactionCardContent">
                <select name="lives" id="lives" class="box">
                    <option value="999999" selected>Infinite</option>
                    <option value="3">3 Lives</option>
                    <option value="5">5 Lives</option>
                    <option value="10">10 Lives</option>
                </select>
                <div style="margin-top: 3%;">
                    This will manage how many lives each player has. After loosing all lives the player can get new lives at the team spawn!
                </div>
            </div>
        </div>
        <div class="interactionCard">
            <div class="interactionCardTitle"> Regeneration </div>
            <div class="interactionCardContent">
                <select name="regeneration" id="regeneration" class="box">
                    <option value="true" selected>Enabled</option>
                    <option value="false">Disabled</option>
                </select>
                <div style="margin-top: 3%;">
                    Here you can enable or disable the Regeneration!
                </div>
            </div>
        </div>
        <div class="interactionCard">
            <div class="interactionCardTitle"> Regeneration Rate </div>
            <div class="interactionCardContent">
                <select name="regrate" id="regrate" class="box">
                    <option value="5" selected>5 seconds</option>
                    <option value="10">10 seconds</option>
                    <option value="20">20 seconds</option>
                    <option value="30">30 seconds</option>
                    <option value="50">50 seconds</option>
                </select>
                <div style="margin-top: 3%;">
                    This will manage the time to regenerate 10HP! <strong>Mark: Regeneration has to be enabled!</strong>
                </div>
            </div>
        </div>
        <div class="interactionCard">
            <div class="interactionCardTitle"> Teams </div>
            <div class="interactionCardContent">
                <select name="teams" id="teams" class="box">
                    <option value="true" selected>Enabled</option>
                    <option value="false">Disabled</option>
                </select>
                <div style="margin-top: 3%;">
                    Here you can enable or disable Teams!
                </div>
            </div>
        </div>
        <div class="interactionCard">
            <div class="interactionCardTitle"> Team Size </div>
            <div class="interactionCardContent">
                <select name="teamsize" id="teamsize" class="box">
                    <option value="2" selected>2 Teams</option>
                    <option value="3">3 Teams</option>
                    <option value="4">4 Teams</option>
                </select>
                <div style="margin-top: 3%;">
                    Select the amount of teams for your game! <strong>Mark: Teams has to be enabled!</strong>
                </div>
            </div>
        </div>
        <div class="interactionCard">
            <div class="interactionCardTitle"> Friendly Fire </div>
            <div class="interactionCardContent">
                <select name="friendlyfire" id="friendlyfire" class="box">
                    <option value="true" selected>Enabled</option>
                    <option value="false">Disabled</option>
                </select>
                <div style="margin-top: 3%;">
                    If this is enabled and you shot one of your mates, he will die and you receive negativ points!
                </div>
            </div>
        </div>
        <div class="interactionCard">
            <div class="interactionCardTitle"> Unitabilities </div>
            <div class="interactionCardContent">
                <select name="unitabilities" id="unitabilities" class="box">
                    <option value="true" selected>Enabled</option>
                    <option value="false">Disabled</option>
                </select>
                <div style="margin-top: 3%;">
                    Turn this to enabled when you want the special abilities of your classes!
                </div>
            </div>
        </div>
        <div class="interactionCard">
            <div class="interactionCardTitle"> Killstreak </div>
            <div class="interactionCardContent">
                <select name="killstreak" id="killstreak" class="box">
                    <option value="true" selected>Enabled</option>
                    <option value="false">Disabled</option>
                </select>
                <div style="margin-top: 3%;">
                    Players will get more points for kills! Higher Killstreak equals more points per kill!
                </div>
            </div>
        </div>
        <div class="interactionCard">
            <div class="interactionCardTitle"> Infinit Ammo </div>
            <div class="interactionCardContent">
                <select name="infammo" id="infammo" class="box">
                    <option value="true" selected>Enabled</option>
                    <option value="false">Disabled</option>
                </select>
                <div style="margin-top: 3%;">
                    With Infinit Ammo you never need to wait for an magazin change, but you still have to wait until your next shot is available
                </div>
            </div>
        </div>
        <div class="interactionCard">
            <div class="interactionCardTitle"> Shield </div>
            <div class="interactionCardContent">
                <select name="shield" id="shield" class="box">
                    <option value="true" selected>Enabled</option>
                    <option value="false">Disabled</option>
                </select>
                <div style="margin-top: 3%;">
                    Here you can simply enable or disable the players shield, no shiels equals faster death!
                </div>
            </div>
        </div>
        <div class="interactionCard">
            <div class="interactionCardTitle"> Items </div>
            <div class="interactionCardContent">
                <select name="items" id="items" class="box">
                    <option value="true" selected>Enabled</option>
                    <option value="false">Disabled</option>
                </select>
                <div style="margin-top: 3%;">
                    Depentend on the luck skill of your class you will receive items after a period of time!
                </div>
            </div>
        </div>
        </form>
        <div style="margin-left: 3%;">
            <button class="button-30" style="width: 22.1%;" onclick="submit()">Save Game</button>
            <button class="button-30" style="width: 22.1%;" onclick="loadGame()">Load Game</button>
            <button class="button-30" style="width: 22.1%; float: right; margin-right: 4%;" onclick="del()">Delete Game</button>
            <button class="button-30" style="width: 22.1%; float: right; margin-right: 2%;" onclick="clearAll()">Clear All</button>
        </div>
        <script>
            const name = document.getElementById("name")
            const regeneration = document.getElementById("regeneration")
            const regrate = document.getElementById("regrate")
            const lives = document.getElementById("lives")
            const teams = document.getElementById("teams")
            const teamsize = document.getElementById("teamsize")
            const friendlyfire = document.getElementById("friendlyfire")
            const unitabilities = document.getElementById("unitabilities")
            const killstreak = document.getElementById("killstreak")
            const infammo = document.getElementById("infammo")
            const shield = document.getElementById("shield")
            const items = document.getElementById("items")

            async function submit() {
                const form = document.getElementById("gameform")
                form.submit()
            }
            var modal = document.getElementById("loadModal");
            async function loadGame() {
                modal.style.display = "block";
            }
            window.onclick = function(event) {
                if (event.target == modal) {
                    modal.style.display = "none";
                }
            }  

            async function loadGame2() {
                let cname = gameselect.value
                if (cname == "none") return console.log("abort")
                const response = await fetch("/api/usergame", {
                    method: 'POST', // *GET, POST, PUT, DELETE, etc.
                    mode: 'cors', // no-cors, *cors, same-origin
                    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
                    credentials: 'same-origin', // include, *same-origin, omit
                    headers: {
                        'Content-Type': 'application/json'
                        // 'Content-Type': 'application/x-www-form-urlencoded',
                    },
                    redirect: 'follow', // manual, *follow, error
                    referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url
                    body: JSON.stringify({"name": cname, "userid": "<%= User._id %>"}) // body data type must match "Content-Type" header
                    });
                    response.json().then(data => {
                        if (data['data']) return alert(data['data'])
                        name.value = data['name']
                        regeneration.value = data['regeneration']
                        regrate.value = data['regrate']
                        lives.value = data['lives']
                        teams.value = data['teams']
                        teamsize.value = data['teamsize']
                        friendlyfire.value = data['friendlyfire']
                        unitabilities.value = data['unitabilities']
                        killstreak.value = data['killstreak']
                        infammo.value = data['infammo']
                        shield.value = data['shield']
                        items.value = data['items']
                    });
                    modal.style.display = "none";
            }

            async function del() {
                let isExecuted = confirm("Are you sure to execute this action?")
                if(isExecuted) {
                    const response = await fetch("/api/deletegame", {
                    method: 'POST', // *GET, POST, PUT, DELETE, etc.
                    mode: 'cors', // no-cors, *cors, same-origin
                    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
                    credentials: 'same-origin', // include, *same-origin, omit
                    headers: {
                        'Content-Type': 'application/json'
                        // 'Content-Type': 'application/x-www-form-urlencoded',
                    },
                    redirect: 'follow', // manual, *follow, error
                    referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url
                    body: JSON.stringify({"gamename": name.value, "userid": "<%= User._id %>"}) // body data type must match "Content-Type" header
                    });
                    response.json().then(data => {
                        console.log(data['data'])
                        clearAll()
                    });
                }
            }

            async function clearAll() {
                location.reload()
            }

        </script>
    </div>
</section>